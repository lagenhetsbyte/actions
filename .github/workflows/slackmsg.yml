on:
  workflow_call:
    secrets:
      channelId:
        required: true
      slackToken:
        required: true

jobs:
  notify_slack_push:
    name: Notify Slack on pushes
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack message on push
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackToken }}
          CHANNEL_ID: ${{ secrets.channelId }}
          REPO: ${{ github.event.repository.name }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
          PUSHER: ${{ github.event.pusher.name }}
          COMPARE_URL: ${{ github.event.compare }}
        run: |
          set -euo pipefail

          payload="$(cat <<'JSON'
          {
            "channel": "__CHANNEL_ID__",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*[__REPO__]:* __COMMIT_MSG__\n *Av:* __PUSHER__\n <__COMPARE_URL__|Kolla Ã¤ndringar>"
                }
              }
            ]
          }
          JSON
          )"

          payload="${payload/__CHANNEL_ID__/${CHANNEL_ID}}"
          payload="${payload/__REPO__/${REPO}}"
          payload="${payload/__COMMIT_MSG__/${COMMIT_MSG}}"
          payload="${payload/__PUSHER__/${PUSHER}}"
          payload="${payload/__COMPARE_URL__/${COMPARE_URL}}"

          response="$(curl -sS -X POST \
            -H "Content-type: application/json" \
            -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
            --data "${payload}" \
            https://slack.com/api/chat.postMessage)"

          echo "${response}" | grep -q '"ok":true' || {
            echo "Slack API error:"
            echo "${response}"
            exit 1
          }
        if: success()